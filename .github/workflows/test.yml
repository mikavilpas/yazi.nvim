---
name: Run tests
on:
  pull_request: ~
  push:
    branches:
      - main

jobs:
  build:
    name:
      "Test (neovim ${{ matrix.neovim_version }}, yazi ${{
      matrix.yazi-version.name }})"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        neovim_version: ["nightly", "stable"]
        yazi-version:
          - name: nightly
            method: cargo-install
            # https://github.com/sxyazi/yazi/commit/3c42195bacdd73fc1d8e84cc4190c24016b89bf6 (2025-09-04)
            commit: 3c42195bacdd73fc1d8e84cc4190c24016b89bf6
          - name: stable
            method: download
            url: https://github.com/sxyazi/yazi/releases/download/v25.5.28/yazi-x86_64-unknown-linux-gnu.zip

    steps:
      - uses: actions/checkout@v5.0.0

      - name: Compile and install `yazi-fm` from source
        if: matrix.yazi-version.method == 'cargo-install'
        uses: baptiste0928/cargo-install@v3.3.2
        with:
          # Due to Cargo's limitations, the `yazi-fm` and `yazi-cli` crates on
          # crates.io must be built with `cargo install --force yazi-build`
          # https://github.com/sxyazi/yazi/blob/2ec3a6c645324295331c0f2ef6d4d946cf11c06b/yazi-fm/build.rs?plain=1#L23-L25
          crate: yazi-build
          git: https://github.com/sxyazi/yazi
          commit: ${{ matrix.yazi-version.commit }}
          tag: ${{ matrix.yazi-version.tag }}

      - name: Download prebuilt yazi version
        if: matrix.yazi-version.method == 'download'
        run: |
          curl -L ${{ matrix.yazi-version.url }} -o yazi.zip
          mkdir -p yazi-zip
          unzip yazi.zip
          chmod +x yazi-x86_64-unknown-linux-gnu/{yazi,ya}
          mv -v yazi-x86_64-unknown-linux-gnu/{yazi,ya} $HOME/.cargo/bin/

      - name: Make sure yazi and ya are installed
        run: |
          echo "PATH:"
          echo $PATH

          yazi --version
          ya --version

      - name: Run tests
        uses: nvim-neorocks/nvim-busted-action@v1.1.0
        with:
          nvim_version: ${{ matrix.neovim_version }}
          luarocks_version: "3.11.1"

      - uses: pnpm/action-setup@v4.1.0
        with:
          # https://github.com/pnpm/action-setup?tab=readme-ov-file#use-cache-to-reduce-installation-time
          run_install: false
      - uses: actions/setup-node@v5.0.0
        with:
          node-version-file: .nvmrc
          cache: "pnpm"
      - run: pnpm install

      - uses: jdx/mise-action@v3.2.0

      - name: Verify that dependencies are available
        run: |
          # ripgrep is a dependency of telescope and fzf-lua
          #
          # fd is a dependency of telescope and fzf-lua
          # https://github.com/sharkdp/fd?tab=readme-ov-file#on-ubuntu
          # make sure it's available as `fd` - there seems to be some conflict in Ubuntu
          #
          # realpath is used to resolve relative paths in yazi.nvim
          fd --version
          fzf --version
          rg --version
          which realpath || { exit 1; }

      - working-directory: integration-tests
        name: Prepare Neovim for integration tests
        run: |
          # NVIM_APPNAME=nvim is the default, but spelled out here for clarity
          NVIM_APPNAME=nvim pnpm tui neovim prepare
          NVIM_APPNAME=nvim_integrations pnpm tui neovim prepare

      # need to work around https://github.com/cypress-io/github-action/issues/1246
      - run: pnpm --filter integration-tests exec cypress install

      - name: Cypress test
        uses: cypress-io/github-action@v6
        with:
          install: false
          command: pnpm tui run

      - uses: actions/upload-artifact@v4.6.2
        # add the line below to store screenshots only on failures
        # if: failure()
        if: failure()
        with:
          name: cypress-screenshots
          path: integration-tests/cypress/screenshots
          if-no-files-found: ignore # 'warn' or 'error' are also available, defaults to `warn`

  automerge:
    needs: build
    name: Automerge Dependabot PRs
    runs-on: ubuntu-latest
    permissions:
      # NOTE: no special token needs to be generated if these permissions are
      # used. However, "Workflow permissions > Allow GitHub Actions to create
      # and approve pull requests" needs to be enabled under
      # github.com/user/repo/settings/actions
      # https://github.com/fastify/github-action-merge-dependabot/issues/359
      pull-requests: write
      contents: write
    steps:
      - uses: fastify/github-action-merge-dependabot@v3.11.1
        with:
          # https://github.com/fastify/github-action-merge-dependabot?tab=readme-ov-file
          github-token: ${{ secrets.GITHUB_TOKEN }}
